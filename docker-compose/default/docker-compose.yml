networks:
  commerce-net:
    driver: "bridge"

services:
  catalog:
    image: "luigiciriello7/catalog:v1"
    container_name: catalog-ms
    extends:
      file: common-config.yml
      service: commerce-base-config
    depends_on:
      catalog-db:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
      configserver:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "nc -z 127.0.0.1 2550 || exit 1" ] #This healthcheck is not 100% accurate,
      #"curl --fail --silent localhost:2550/actuator/health/readiness | grep UP || exit 1" is definitely more accurate,
      #but the current base docker image doesn't have curl installed, TODO solve this issue
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_CONFIG_IMPORT: optional:configserver:http://configserver:8888
      SPRING_CLOUD_CONFIG_URI: http://configserver:8888

  catalog-db:
    container_name: catalog-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: catalog
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d catalog" ]
    extends:
      file: common-config.yml
      service: commerce-db-config

  customers:
    image: "luigiciriello7/customers:v1"
    container_name: customers-ms
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_CONFIG_IMPORT: optional:configserver:http://configserver:8888
      SPRING_CLOUD_CONFIG_URI: http://configserver:8888
    extends:
      file: common-config.yml
      service: commerce-base-config
    depends_on:
      customers-db:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
      configserver:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "nc -z 127.0.0.1 2550 || exit 1" ] #This healthcheck is not 100% accurate,
      #"curl --fail --silent localhost:2550/actuator/health/readiness | grep UP || exit 1" is definitely more accurate,
      #but the current base docker image doesn't have curl installed, TODO solve this issue
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s


  customers-db:
    container_name: customers-db
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: customers
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d customers" ]
    extends:
      file: common-config.yml
      service: commerce-db-config

  orders:
    image: "luigiciriello7/orders:v1"
    container_name: orders-ms
    extends:
      file: common-config.yml
      service: commerce-base-config
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_CONFIG_IMPORT: optional:configserver:http://configserver:8888
      SPRING_CLOUD_CONFIG_URI: http://configserver:8888
    depends_on:
      orders-db:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
      configserver:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "nc -z 127.0.0.1 2550 || exit 1" ] #This healthcheck is not 100% accurate,
      #"curl --fail --silent localhost:2550/actuator/health/readiness | grep UP || exit 1" is definitely more accurate,
      #but the current base docker image doesn't have curl installed, TODO solve this issue
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s

  orders-db:
    container_name: orders-db
    ports:
      - "5434:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d orders" ]
    environment:
      POSTGRES_DB: orders
    extends:
      file: common-config.yml
      service: commerce-db-config

  eurekaserver:
    image: "luigiciriello7/eurekaserver:v1"
    container_name: eurekaserver-ms
    ports:
      - "8070:8070"
    healthcheck:
      test: ["CMD-SHELL", "nc -z 127.0.0.1 8070 || exit 1"] #This healthcheck is not 100% accurate,
              #"curl --fail --silent localhost:8070/actuator/health/readiness | grep UP || exit 1" is definitely more accurate,
              #but the current base docker image doesn't have curl installed, TODO solve this issue
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    extends:
      file: common-config.yml
      service: commerce-base-config

  gatewayserver:
    image: "luigiciriello7/gatewayserver:v1"
    container_name: gatewayserver-ms
    ports:
      - "8072:8072"
    depends_on:
      catalog:
        condition: service_healthy
      customers:
        condition: service_healthy
      orders:
        condition: service_healthy
      configserver:
        condition: service_healthy
    environment:
      SPRING_DATA_REDIS_HOST: redis
    extends:
      file: common-config.yml
      service: commerce-base-config

  configserver:
    image: "luigiciriello7/configserver:v1"
    container_name: configserver-ms
    ports:
      - "8888:8888"
    healthcheck:
      test: [ "CMD-SHELL", "nc -z 127.0.0.1 8888 || exit 1" ] #This healthcheck is not 100% accurate,
      #"curl --fail --silent localhost:8888/actuator/health/readiness | grep UP || exit 1" is definitely more accurate,
      #but the current base docker image doesn't have curl installed, TODO solve this issue
    environment:
      SPRING_DATA_REDIS_HOST: redis
    extends:
      file: common-config.yml
      service: commerce-base-config

  redis:
    image: "redis"
    container_name: redis-ecommerce
    extends:
      file: common-config.yml
      service: commerce-base-config

